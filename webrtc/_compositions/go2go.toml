[metadata]
  name = "go2go {{ .Env.GitReference }}"

[global]
  plan = "libp2p/webrtc"
  case = "webrtc"
  builder = "docker:go"
  runner = "local:docker"
  total_instances = 2

  [global.build_config]
    enable_go_build_cache  = false # see https://github.com/testground/testground/issues/1361
    go_proxy_mode          = "remote"
    go_proxy_url           = "https://proxy.golang.org"

[[groups]]
  id = "server"
  instances = { count = 1 }
  builder = "docker:go" # override builder here

  [groups.build_config]
    path = "./go"
    build_base_image = 'golang:1.19-buster'
    build_args = { image = "golang:1.19-bullseye" }
    modfile = "go.orig.mod"

  [groups.run.test_params]
    expected_implementation = "go"

  [groups.build_config.dockerfile_extensions]
    pre_build = '''
RUN cd ${PLAN_DIR} && go get github.com/minio/sha256-simd@v1.0.0
RUN cd ${PLAN_DIR} && go get github.com/prometheus/client_golang/prometheus@v1.13.0
RUN cd ${PLAN_DIR} && go mod tidy
'''
#TODO change url & branch here and below
    pre_mod_download = '''
RUN git clone --single-branch --branch ckousik/webrtc https://github.com/ckousik/go-libp2p.git /go-libp2p/
'''

[[groups]]
  id = "client"
  instances = { count = 1 }
  builder = "docker:go" # override builder here

  [groups.build_config]
    path = "./go"
    build_base_image = 'golang:1.19-buster'
    build_args = { image = "golang:1.19-bullseye" }
    modfile = "go.orig.mod"

  [groups.run.test_params]
    expected_implementation = "go"

  [groups.build_config.dockerfile_extensions]
    pre_build = '''
RUN cd ${PLAN_DIR} && go get github.com/minio/sha256-simd@v1.0.0
RUN cd ${PLAN_DIR} && go get github.com/prometheus/client_golang/prometheus@v1.13.0
RUN cd ${PLAN_DIR} && go mod tidy
'''

    pre_mod_download = '''
RUN git clone --single-branch --branch ckousik/webrtc https://github.com/ckousik/go-libp2p.git /go-libp2p/
'''
